--[[

Vex Hub Lib
Extracted from Luna Interface Suite
Simplified UI Library with Windows, Tabs, Buttons, and Toggles

]]

local VexHub = { 
    Options = {}, 
    ThemeGradient = ColorSequence.new{
        ColorSequenceKeypoint.new(0.00, Color3.fromRGB(117, 164, 206)), 
        ColorSequenceKeypoint.new(0.50, Color3.fromRGB(123, 201, 201)), 
        ColorSequenceKeypoint.new(1.00, Color3.fromRGB(224, 138, 175))
    } 
}

-- Services
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local CoreGui = game:GetService("CoreGui")

-- Constants
local tweeninfo = TweenInfo.new(0.2, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out)

-- Material Icons (comprehensive collection)
local IconModule = {
	Lucide = nil,
	Material = {
		["perm_media"] = "http://www.roblox.com/asset/?id=6031215982";
		["sticky_note_2"] = "http://www.roblox.com/asset/?id=6031265972";
		["gavel"] = "http://www.roblox.com/asset/?id=6023565902";
		["table_view"] = "http://www.roblox.com/asset/?id=6031233835";
		["home"] = "http://www.roblox.com/asset/?id=6026568195";
		["list"] = "http://www.roblox.com/asset/?id=6026568229";
		["alarm_add"] = "http://www.roblox.com/asset/?id=6023426898";
		["speaker_notes"] = "http://www.roblox.com/asset/?id=6031266001";
		["check_circle_outline"] = "http://www.roblox.com/asset/?id=6023426909";
		["extension"] = "http://www.roblox.com/asset/?id=6023565892";
		["pending"] = "http://www.roblox.com/asset/?id=6031084745";
		["pageview"] = "http://www.roblox.com/asset/?id=6031216007";
		["group_work"] = "http://www.roblox.com/asset/?id=6023565910";
		["zoom_in"] = "http://www.roblox.com/asset/?id=6031075573";
		["aspect_ratio"] = "http://www.roblox.com/asset/?id=6022668895";
		["code"] = "http://www.roblox.com/asset/?id=6022668955";
		["3d_rotation"] = "http://www.roblox.com/asset/?id=6022668893";
		["translate"] = "http://www.roblox.com/asset/?id=6031225812";
		["star_rate"] = "http://www.roblox.com/asset/?id=6031265978";
		["system_update_alt"] = "http://www.roblox.com/asset/?id=6031251515";
		["open_with"] = "http://www.roblox.com/asset/?id=6026568265";
		["build_circle"] = "http://www.roblox.com/asset/?id=6023426952";
		["toc"] = "http://www.roblox.com/asset/?id=6031229341";
		["settings_phone"] = "http://www.roblox.com/asset/?id=6031289445";
		["open_in_full"] = "http://www.roblox.com/asset/?id=6026568245";
		["history"] = "http://www.roblox.com/asset/?id=6026568197";
		["accessibility_new"] = "http://www.roblox.com/asset/?id=6022668945";
		["hourglass_disabled"] = "http://www.roblox.com/asset/?id=6026568193";
		["line_style"] = "http://www.roblox.com/asset/?id=6026568276";
		["account_circle"] = "http://www.roblox.com/asset/?id=6022668898";
		["settings_cell"] = "http://www.roblox.com/asset/?id=6031280890";
		["search_off"] = "http://www.roblox.com/asset/?id=6031260783";
		["shop"] = "http://www.roblox.com/asset/?id=6031265983";
		["anchor"] = "http://www.roblox.com/asset/?id=6023426906";
		["language"] = "http://www.roblox.com/asset/?id=6026568213";
		["settings_brightness"] = "http://www.roblox.com/asset/?id=6031280902";
		["restore_page"] = "http://www.roblox.com/asset/?id=6031154877";
		["chrome_reader_mode"] = "http://www.roblox.com/asset/?id=6023426912";
		["sync_alt"] = "http://www.roblox.com/asset/?id=6031233840";
		["book"] = "http://www.roblox.com/asset/?id=6022860343";
		["smart_button"] = "http://www.roblox.com/asset/?id=6031265962";
		["request_page"] = "http://www.roblox.com/asset/?id=6031154873";
		["lock_clock"] = "http://www.roblox.com/asset/?id=6026568260";
		["android"] = "http://www.roblox.com/asset/?id=6022668966";
		["outgoing_mail"] = "http://www.roblox.com/asset/?id=6026568242";
		["dynamic_form"] = "http://www.roblox.com/asset/?id=6023426970";
		["track_changes"] = "http://www.roblox.com/asset/?id=6031225814";
		["source"] = "http://www.roblox.com/asset/?id=6031289451";
		["thumb_down"] = "http://www.roblox.com/asset/?id=6031229336";
		["integration_instructions"] = "http://www.roblox.com/asset/?id=6026568214";
		["opacity"] = "http://www.roblox.com/asset/?id=6026568295";
		["perm_identity"] = "http://www.roblox.com/asset/?id=6031215978";
		["view_module"] = "http://www.roblox.com/asset/?id=6031079152";
		["perm_data_setting"] = "http://www.roblox.com/asset/?id=6031215991";
		["assignment_turned_in"] = "http://www.roblox.com/asset/?id=6023426904";
		["change_history"] = "http://www.roblox.com/asset/?id=6023426914";
		["thumb_down_off_alt"] = "http://www.roblox.com/asset/?id=6031229354";
		["text_rotation_angledown"] = "http://www.roblox.com/asset/?id=6031251513";
		["bookmark"] = "http://www.roblox.com/asset/?id=6022852108";
		["view_stream"] = "http://www.roblox.com/asset/?id=6031079164";
		["remove_done"] = "http://www.roblox.com/asset/?id=6031086169";
		["markunread_mailbox"] = "http://www.roblox.com/asset/?id=6031082531";
		["store"] = "http://www.roblox.com/asset/?id=6031265968";
		["text_rotation_angleup"] = "http://www.roblox.com/asset/?id=6031229337";
		["eco"] = "http://www.roblox.com/asset/?id=6023426988";
		["find_in_page"] = "http://www.roblox.com/asset/?id=6023426986";
		["api"] = "http://www.roblox.com/asset/?id=6022668911";
		["launch"] = "http://www.roblox.com/asset/?id=6026568211";
		["text_rotation_down"] = "http://www.roblox.com/asset/?id=6031229334";
		["flip_to_back"] = "http://www.roblox.com/asset/?id=6023565896";
		["contact_page"] = "http://www.roblox.com/asset/?id=6022668881";
		["preview"] = "http://www.roblox.com/asset/?id=6031260793";
		["restore"] = "http://www.roblox.com/asset/?id=6031260800";
		["favorite_border"] = "http://www.roblox.com/asset/?id=6023565882";
		["assignment_late"] = "http://www.roblox.com/asset/?id=6022668880";
		["youtube_searched_for"] = "http://www.roblox.com/asset/?id=6031075934";
		["hourglass_full"] = "http://www.roblox.com/asset/?id=6026568190";
		["timeline"] = "http://www.roblox.com/asset/?id=6031229350";
		["turned_in"] = "http://www.roblox.com/asset/?id=6031225808";
		["info"] = "http://www.roblox.com/asset/?id=6026568227";
		["restore_from_trash"] = "http://www.roblox.com/asset/?id=6031154869";
		["arrow_circle_down"] = "http://www.roblox.com/asset/?id=6022668877";
		["flaky"] = "http://www.roblox.com/asset/?id=6031082523";
		["alarm_on"] = "http://www.roblox.com/asset/?id=6023426920";
		["swap_vertical_circle"] = "http://www.roblox.com/asset/?id=6031233839";
		["open_in_new"] = "http://www.roblox.com/asset/?id=6026568256";
		["watch_later"] = "http://www.roblox.com/asset/?id=6031075924";
		["alarm_off"] = "http://www.roblox.com/asset/?id=6023426901";
		["maximize"] = "http://www.roblox.com/asset/?id=6026568267";
		["lock_outline"] = "http://www.roblox.com/asset/?id=6031082533";
		["outbond"] = "http://www.roblox.com/asset/?id=6026568244";
		["view_carousel"] = "http://www.roblox.com/asset/?id=6031251507";
		["published_with_changes"] = "http://www.roblox.com/asset/?id=6031243328";
		["verified_user"] = "http://www.roblox.com/asset/?id=6031225819";
		["drag_indicator"] = "http://www.roblox.com/asset/?id=6023426962";
		["lightbulb_outline"] = "http://www.roblox.com/asset/?id=6026568254";
		["segment"] = "http://www.roblox.com/asset/?id=6031260773";
		["assignment"] = "http://www.roblox.com/asset/?id=6022668882";
		["work_outline"] = "http://www.roblox.com/asset/?id=6031075930";
		["line_weight"] = "http://www.roblox.com/asset/?id=6026568226";
		["dangerous"] = "http://www.roblox.com/asset/?id=6022668916";
		["assessment"] = "http://www.roblox.com/asset/?id=6022668897";
		["view_day"] = "http://www.roblox.com/asset/?id=6031079153";
		["help_center"] = "http://www.roblox.com/asset/?id=6026568192";
		["logout"] = "http://www.roblox.com/asset/?id=6031082522";
		["event"] = "http://www.roblox.com/asset/?id=6023426959";
		["get_app"] = "http://www.roblox.com/asset/?id=6023565889";
		["tab"] = "http://www.roblox.com/asset/?id=6031233851";
		["label"] = "http://www.roblox.com/asset/?id=6031082525";
		["g_translate"] = "http://www.roblox.com/asset/?id=6031082526";
		["view_week"] = "http://www.roblox.com/asset/?id=6031079154";
		["view_in_ar"] = "http://www.roblox.com/asset/?id=6031079158";
		["card_travel"] = "http://www.roblox.com/asset/?id=6023426925";
		["lock_open"] = "http://www.roblox.com/asset/?id=6026568220";
		["voice_over_off"] = "http://www.roblox.com/asset/?id=6031075927";
		["app_blocking"] = "http://www.roblox.com/asset/?id=6022668952";
		["settings_ethernet"] = "http://www.roblox.com/asset/?id=6031280883";
		["supervised_user_circle"] = "http://www.roblox.com/asset/?id=6031289449";
		["done_all"] = "http://www.roblox.com/asset/?id=6023426929";
		["lightbulb"] = "http://www.roblox.com/asset/?id=6026568247";
		["find_replace"] = "http://www.roblox.com/asset/?id=6023426979";
		["bookmarks"] = "http://www.roblox.com/asset/?id=6023426924";
		["today"] = "http://www.roblox.com/asset/?id=6031229352";
		["class"] = "http://www.roblox.com/asset/?id=6022668949";
		["supervisor_account"] = "http://www.roblox.com/asset/?id=6031251516";
		["support"] = "http://www.roblox.com/asset/?id=6031251532";
		["done_outline"] = "http://www.roblox.com/asset/?id=6023426936";
		["reorder"] = "http://www.roblox.com/asset/?id=6031154868";
		["fact_check"] = "http://www.roblox.com/asset/?id=6023426951";
		["thumb_up"] = "http://www.roblox.com/asset/?id=6031229347";
		["assignment_returned"] = "http://www.roblox.com/asset/?id=6023426899";
		["card_giftcard"] = "http://www.roblox.com/asset/?id=6023426978";
		["trending_down"] = "http://www.roblox.com/asset/?id=6031225811";
		["settings_backup_restore"] = "http://www.roblox.com/asset/?id=6031280886";
		["settings_voice"] = "http://www.roblox.com/asset/?id=6031265966";
		["dns"] = "http://www.roblox.com/asset/?id=6023426958";
		["perm_scan_wifi"] = "http://www.roblox.com/asset/?id=6031215985";
		["plagiarism"] = "http://www.roblox.com/asset/?id=6031243320";
		["commute"] = "http://www.roblox.com/asset/?id=6022668901";
		["gif"] = "http://www.roblox.com/asset/?id=6031082540";
		["work"] = "http://www.roblox.com/asset/?id=6031075939";
		["picture_in_picture_alt"] = "http://www.roblox.com/asset/?id=6031215979";
		["query_builder"] = "http://www.roblox.com/asset/?id=6031086183";
		["label_off"] = "http://www.roblox.com/asset/?id=6026568209";
		["all_out"] = "http://www.roblox.com/asset/?id=6022668876";
		["article"] = "http://www.roblox.com/asset/?id=6022668907";
		["shopping_basket"] = "http://www.roblox.com/asset/?id=6031265997";
		["mark_as_unread"] = "http://www.roblox.com/asset/?id=6026568223";
		["work_off"] = "http://www.roblox.com/asset/?id=6031075937";
		["delete_outline"] = "http://www.roblox.com/asset/?id=6022668962";
		["account_box"] = "http://www.roblox.com/asset/?id=6023426915";
		["home_filled"] = "rbxassetid://9080449299";
		["lock"] = "http://www.roblox.com/asset/?id=6026568224";
		["perm_device_information"] = "http://www.roblox.com/asset/?id=6031215996";
		["add_task"] = "http://www.roblox.com/asset/?id=6022668912";
		["text_rotate_up"] = "http://www.roblox.com/asset/?id=6031251526";
		["swipe"] = "http://www.roblox.com/asset/?id=6031233863";
		["eject"] = "http://www.roblox.com/asset/?id=6023426930";
		["mediation"] = "http://www.roblox.com/asset/?id=6026568249";
		["label_important_outline"] = "http://www.roblox.com/asset/?id=6026568199";
		["settings_remote"] = "http://www.roblox.com/asset/?id=6031289442";
		["history_toggle_off"] = "http://www.roblox.com/asset/?id=6026568196";
		["invert_colors"] = "http://www.roblox.com/asset/?id=6026568253";
		["visibility_off"] = "http://www.roblox.com/asset/?id=6031075929";
		["addchart"] = "http://www.roblox.com/asset/?id=6023426905";
		["cancel_schedule_send"] = "http://www.roblox.com/asset/?id=6022668963";
		["loyalty"] = "http://www.roblox.com/asset/?id=6026568237";
		["speaker_notes_off"] = "http://www.roblox.com/asset/?id=6031265965";
		["online_prediction"] = "http://www.roblox.com/asset/?id=6026568239";
		["remove_shopping_cart"] = "http://www.roblox.com/asset/?id=6031260778";
		["text_rotate_vertical"] = "http://www.roblox.com/asset/?id=6031251518";
		["visibility"] = "http://www.roblox.com/asset/?id=6031075931";
		["add_to_drive"] = "http://www.roblox.com/asset/?id=6022860335";
		["accessible"] = "http://www.roblox.com/asset/?id=6022668902";
		["bookmark_border"] = "http://www.roblox.com/asset/?id=6022860339";
		["tour"] = "http://www.roblox.com/asset/?id=6031229362";
		["compare_arrows"] = "http://www.roblox.com/asset/?id=6022668951";
		["view_sidebar"] = "http://www.roblox.com/asset/?id=6031079160";
		["face"] = "http://www.roblox.com/asset/?id=6023426944";
		["wysiwyg"] = "http://www.roblox.com/asset/?id=6031075938";
		["camera_enhance"] = "http://www.roblox.com/asset/?id=6023426935";
		["perm_camera_mic"] = "http://www.roblox.com/asset/?id=6031215983";
		["model_training"] = "http://www.roblox.com/asset/?id=6026568222";
		["arrow_circle_up"] = "http://www.roblox.com/asset/?id=6022668934";
		["euro_symbol"] = "http://www.roblox.com/asset/?id=6023426954";
		["pending_actions"] = "http://www.roblox.com/asset/?id=6031260777";
		["not_accessible"] = "http://www.roblox.com/asset/?id=6026568269";
		["explore_off"] = "http://www.roblox.com/asset/?id=6023426953";
		["build"] = "http://www.roblox.com/asset/?id=6023426938";
		["backup"] = "http://www.roblox.com/asset/?id=6023426911";
		["settings_input_antenna"] = "http://www.roblox.com/asset/?id=6031280891";
		["disabled_by_default"] = "http://www.roblox.com/asset/?id=6023426939";
		["upgrade"] = "http://www.roblox.com/asset/?id=6031225815";
		["contactless"] = "http://www.roblox.com/asset/?id=6022668886";
		["trending_flat"] = "http://www.roblox.com/asset/?id=6031225818";
		["schedule"] = "http://www.roblox.com/asset/?id=6031260808";
		["offline_pin"] = "http://www.roblox.com/asset/?id=6031084770";
		["date_range"] = "http://www.roblox.com/asset/?id=6022668894";
		["flight_land"] = "http://www.roblox.com/asset/?id=6023565897";
		["view_headline"] = "http://www.roblox.com/asset/?id=6031079151";
		["cached"] = "http://www.roblox.com/asset/?id=6023426921";
		["unpublished"] = "http://www.roblox.com/asset/?id=6031225817";
		["outlet"] = "http://www.roblox.com/asset/?id=6031084748";
		["favorite"] = "http://www.roblox.com/asset/?id=6023426974";
		["vertical_split"] = "http://www.roblox.com/asset/?id=6031225820";
		["report_problem"] = "http://www.roblox.com/asset/?id=6031086176";
		["fingerprint"] = "http://www.roblox.com/asset/?id=6023565895";
		["important_devices"] = "http://www.roblox.com/asset/?id=6026568202";
		["outbox"] = "http://www.roblox.com/asset/?id=6026568263";
		["all_inbox"] = "http://www.roblox.com/asset/?id=6022668909";
		["label_important"] = "http://www.roblox.com/asset/?id=6026568215";
		["print"] = "http://www.roblox.com/asset/?id=6031243324";
		["settings_bluetooth"] = "http://www.roblox.com/asset/?id=6031280905";
		["power_settings_new"] = "http://www.roblox.com/asset/?id=6031260781";
		["zoom_out"] = "http://www.roblox.com/asset/?id=6031075577";
		["stars"] = "http://www.roblox.com/asset/?id=6031265971";
		["offline_bolt"] = "http://www.roblox.com/asset/?id=6031084742";
		["feedback"] = "http://www.roblox.com/asset/?id=6023426957";
		["accessibility"] = "http://www.roblox.com/asset/?id=6022668887";
		["announcement"] = "http://www.roblox.com/asset/?id=6022668946";
		["settings_input_hdmi"] = "http://www.roblox.com/asset/?id=6031280970";
		["leaderboard"] = "http://www.roblox.com/asset/?id=6026568216";
		["view_quilt"] = "http://www.roblox.com/asset/?id=6031079155";
		["note_add"] = "http://www.roblox.com/asset/?id=6031084749";
		["theaters"] = "http://www.roblox.com/asset/?id=6031229335";
		["alarm"] = "http://www.roblox.com/asset/?id=6023426910";
		["settings_input_composite"] = "http://www.roblox.com/asset/?id=6031280896";
		["grade"] = "http://www.roblox.com/asset/?id=6026568189";
		["tab_unselected"] = "http://www.roblox.com/asset/?id=6031251505";
		["swap_vert"] = "http://www.roblox.com/asset/?id=6031233847";
		["assignment_return"] = "http://www.roblox.com/asset/?id=6023426931";
		["highlight_alt"] = "http://www.roblox.com/asset/?id=6023565913";
		["shopping_bag"] = "http://www.roblox.com/asset/?id=6031265970";
		["contact_support"] = "http://www.roblox.com/asset/?id=6022668879";
		["flip_to_front"] = "http://www.roblox.com/asset/?id=6023565894";
		["touch_app"] = "http://www.roblox.com/asset/?id=6031229361";
		["room"] = "http://www.roblox.com/asset/?id=6031154875";
		["send_and_archive"] = "http://www.roblox.com/asset/?id=6031280889";
		["view_array"] = "http://www.roblox.com/asset/?id=6031225842";
		["settings_power"] = "http://www.roblox.com/asset/?id=6031289446";
		["admin_panel_settings"] = "http://www.roblox.com/asset/?id=6022668961";
		["open_in_browser"] = "http://www.roblox.com/asset/?id=6026568266";
		["card_membership"] = "http://www.roblox.com/asset/?id=6023426942";
		["rule"] = "http://www.roblox.com/asset/?id=6031154859";
		["schedule_send"] = "http://www.roblox.com/asset/?id=6031154866";
		["calendar_today"] = "http://www.roblox.com/asset/?id=6022668917";
		["info_outline"] = "http://www.roblox.com/asset/?id=6026568210";
		["description"] = "http://www.roblox.com/asset/?id=6022668888";
		["dashboard_customize"] = "http://www.roblox.com/asset/?id=6022668899";
		["rowing"] = "http://www.roblox.com/asset/?id=6031154857";
		["swap_horizontal_circle"] = "http://www.roblox.com/asset/?id=6031233833";
		["account_balance_wallet"] = "http://www.roblox.com/asset/?id=6022668892";
		["view_agenda"] = "http://www.roblox.com/asset/?id=6031225831";
		["shop_two"] = "http://www.roblox.com/asset/?id=6031289461";
		["done"] = "http://www.roblox.com/asset/?id=6023426926";
		["circle_notifications"] = "http://www.roblox.com/asset/?id=6023426923";
		["compress"] = "http://www.roblox.com/asset/?id=6022668878";
		["calendar_view_day"] = "http://www.roblox.com/asset/?id=6023426946";
		["thumbs_up_down"] = "http://www.roblox.com/asset/?id=6031229373";
		["account_balance"] = "http://www.roblox.com/asset/?id=6022668900";
		["play_for_work"] = "http://www.roblox.com/asset/?id=6031260776";
		["pets"] = "http://www.roblox.com/asset/?id=6031260782";
		["view_column"] = "http://www.roblox.com/asset/?id=6031079172";
		["search"] = "http://www.roblox.com/asset/?id=6031154871";
		["autorenew"] = "http://www.roblox.com/asset/?id=6023565901";
		["copyright"] = "http://www.roblox.com/asset/?id=6023565898";
		["privacy_tip"] = "http://www.roblox.com/asset/?id=6031260784";
		["arrow_right_alt"] = "http://www.roblox.com/asset/?id=6022668890";
		["delete"] = "http://www.roblox.com/asset/?id=6022668885";
		["nightlight_round"] = "http://www.roblox.com/asset/?id=6031084743";
		["batch_prediction"] = "http://www.roblox.com/asset/?id=6022860334";
		["shopping_cart"] = "http://www.roblox.com/asset/?id=6031265976";
		["login"] = "http://www.roblox.com/asset/?id=6031082527";
		["settings_input_svideo"] = "http://www.roblox.com/asset/?id=6031289444";
		["payment"] = "http://www.roblox.com/asset/?id=6031084751";
		["update"] = "http://www.roblox.com/asset/?id=6031225810";
		["text_rotation_none"] = "http://www.roblox.com/asset/?id=6031229344";
		["perm_contact_calendar"] = "http://www.roblox.com/asset/?id=6031215990";
		["explore"] = "http://www.roblox.com/asset/?id=6023426941";
		["delete_forever"] = "http://www.roblox.com/asset/?id=6022668939";
		["rounded_corner"] = "http://www.roblox.com/asset/?id=6031154861";
		["book_online"] = "http://www.roblox.com/asset/?id=6022860332";
		["quickreply"] = "http://www.roblox.com/asset/?id=6031243319";
		["bug_report"] = "http://www.roblox.com/asset/?id=6022852107";
		["subtitles_off"] = "http://www.roblox.com/asset/?id=6031289466";
		["close_fullscreen"] = "http://www.roblox.com/asset/?id=6023426928";
		["horizontal_split"] = "http://www.roblox.com/asset/?id=6026568194";
		["minimize"] = "http://www.roblox.com/asset/?id=6026568240";
		["filter_list_alt"] = "http://www.roblox.com/asset/?id=6023426955";
		["add_shopping_cart"] = "http://www.roblox.com/asset/?id=6022668875";
		["next_plan"] = "http://www.roblox.com/asset/?id=6026568231";
		["view_list"] = "http://www.roblox.com/asset/?id=6031079156";
		["receipt"] = "http://www.roblox.com/asset/?id=6031086173";
		["polymer"] = "http://www.roblox.com/asset/?id=6031260785";
		["spellcheck"] = "http://www.roblox.com/asset/?id=6031289450";
		["wifi_protected_setup"] = "http://www.roblox.com/asset/?id=6031075926";
		["label_outline"] = "http://www.roblox.com/asset/?id=6026568207";
		["highlight_off"] = "http://www.roblox.com/asset/?id=6023565916";
		["turned_in_not"] = "http://www.roblox.com/asset/?id=6031225806";
		["edit_off"] = "http://www.roblox.com/asset/?id=6023426983";
		["question_answer"] = "http://www.roblox.com/asset/?id=6031086172";
		["settings_overscan"] = "http://www.roblox.com/asset/?id=6031289459";
		["trending_up"] = "http://www.roblox.com/asset/?id=6031225816";
		["verified"] = "http://www.roblox.com/asset/?id=6031225809";
		["flight_takeoff"] = "http://www.roblox.com/asset/?id=6023565891";
		["grading"] = "http://www.roblox.com/asset/?id=6026568191";
		["dashboard"] = "http://www.roblox.com/asset/?id=6022668883";
		["expand"] = "http://www.roblox.com/asset/?id=6022668891";
		["backup_table"] = "http://www.roblox.com/asset/?id=6022860338";
		["analytics"] = "http://www.roblox.com/asset/?id=6022668884";
		["picture_in_picture"] = "http://www.roblox.com/asset/?id=6031215994";
		["settings"] = "http://www.roblox.com/asset/?id=6031280882";
		["accessible_forward"] = "http://www.roblox.com/asset/?id=6022668906";
		["pan_tool"] = "http://www.roblox.com/asset/?id=6031084771";
		["https"] = "http://www.roblox.com/asset/?id=6026568200";
		["filter_alt"] = "http://www.roblox.com/asset/?id=6023426984";
		["thumb_up_off_alt"] = "http://www.roblox.com/asset/?id=6031229342";
		["record_voice_over"] = "http://www.roblox.com/asset/?id=6031243318";
		["help_outline"] = "http://www.roblox.com/asset/?id=6026568201";
		["check_circle"] = "http://www.roblox.com/asset/?id=6023426945";
		["comment_bank"] = "http://www.roblox.com/asset/?id=6023426937";
		["perm_phone_msg"] = "http://www.roblox.com/asset/?id=6031215986";
		["settings_applications"] = "http://www.roblox.com/asset/?id=6031280894";
		["exit_to_app"] = "http://www.roblox.com/asset/?id=6023426922";
		["saved_search"] = "http://www.roblox.com/asset/?id=6031154867";
		["toll"] = "http://www.roblox.com/asset/?id=6031229343";
		["not_started"] = "http://www.roblox.com/asset/?id=6026568232";
		["subject"] = "http://www.roblox.com/asset/?id=6031289452";
		["redeem"] = "http://www.roblox.com/asset/?id=6031086170";
		["input"] = "http://www.roblox.com/asset/?id=6026568225";
		["settings_input_component"] = "http://www.roblox.com/asset/?id=6031280884";
		["assignment_ind"] = "http://www.roblox.com/asset/?id=6022668935";
		["swap_horiz"] = "http://www.roblox.com/asset/?id=6031233841";
		["fullscreen"] = "http://www.roblox.com/asset/?id=6031094681";
		["cancel"] = "http://www.roblox.com/asset/?id=6031094677";
		["subdirectory_arrow_left"] = "http://www.roblox.com/asset/?id=6031104654";
		["close"] = "http://www.roblox.com/asset/?id=6031094678";
		["arrow_back_ios"] = "http://www.roblox.com/asset/?id=6031091003";
		["east"] = "http://www.roblox.com/asset/?id=6031094675";
		["unfold_more"] = "http://www.roblox.com/asset/?id=6031104644";
		["south"] = "http://www.roblox.com/asset/?id=6031104646";
		["arrow_drop_up"] = "http://www.roblox.com/asset/?id=6031090990";
		["arrow_back"] = "http://www.roblox.com/asset/?id=6031091000";
		["arrow_downward"] = "http://www.roblox.com/asset/?id=6031090991";
		["west"] = "http://www.roblox.com/asset/?id=6031104677";
		["legend_toggle"] = "http://www.roblox.com/asset/?id=6031097233";
		["fullscreen_exit"] = "http://www.roblox.com/asset/?id=6031094691";
		["last_page"] = "http://www.roblox.com/asset/?id=6031094686";
		["switch_right"] = "http://www.roblox.com/asset/?id=6031104649";
		["check"] = "http://www.roblox.com/asset/?id=6031094667";
		["home_work"] = "http://www.roblox.com/asset/?id=6031094683";
		["north_east"] = "http://www.roblox.com/asset/?id=6031097228";
		["double_arrow"] = "http://www.roblox.com/asset/?id=6031094674";
		["more_vert"] = "http://www.roblox.com/asset/?id=6031104648";
		["chevron_left"] = "http://www.roblox.com/asset/?id=6031094670";
		["more_horiz"] = "http://www.roblox.com/asset/?id=6031104650";
		["unfold_less"] = "http://www.roblox.com/asset/?id=6031104681";
		["first_page"] = "http://www.roblox.com/asset/?id=6031094682";
		["payments"] = "http://www.roblox.com/asset/?id=6031097227";
		["arrow_right"] = "http://www.roblox.com/asset/?id=6031090994";
		["offline_share"] = "http://www.roblox.com/asset/?id=6031097267";
		["south_west"] = "http://www.roblox.com/asset/?id=6031104652";
		["expand_less"] = "http://www.roblox.com/asset/?id=6031094679";
		["south_east"] = "http://www.roblox.com/asset/?id=6031104642";
		["assistant_navigation"] = "http://www.roblox.com/asset/?id=6031091006";
		["apps"] = "http://www.roblox.com/asset/?id=6031090999";
		["arrow_upward"] = "http://www.roblox.com/asset/?id=6031090997";
		["app_settings_alt"] = "http://www.roblox.com/asset/?id=6031090998";
		["subdirectory_arrow_right"] = "http://www.roblox.com/asset/?id=6031104647";
		["north_west"] = "http://www.roblox.com/asset/?id=6031104630";
		["switch_left"] = "http://www.roblox.com/asset/?id=6031104651";
		["chevron_right"] = "http://www.roblox.com/asset/?id=6031094680";
		["arrow_forward"] = "http://www.roblox.com/asset/?id=6031090995";
		["arrow_forward_ios"] = "http://www.roblox.com/asset/?id=6031091008";
		["arrow_drop_down"] = "http://www.roblox.com/asset/?id=6031091004";
		["refresh"] = "http://www.roblox.com/asset/?id=6031097226";
		["pivot_table_chart"] = "http://www.roblox.com/asset/?id=6031097234";
		["expand_more"] = "http://www.roblox.com/asset/?id=6031094687";
		["campaign"] = "http://www.roblox.com/asset/?id=6031094666";
		["arrow_left"] = "http://www.roblox.com/asset/?id=6031091002";
		["arrow_drop_down_circle"] = "http://www.roblox.com/asset/?id=6031091001";
		["menu_open"] = "http://www.roblox.com/asset/?id=6031097229";
		["waterfall_chart"] = "http://www.roblox.com/asset/?id=6031104632";
		["assistant_direction"] = "http://www.roblox.com/asset/?id=6031091005";
		["menu"] = "http://www.roblox.com/asset/?id=6031097225";
		["toggle_on"] = "http://www.roblox.com/asset/?id=6031068430";
		["toggle_off"] = "http://www.roblox.com/asset/?id=6031068429";
		["sparkle"] = "http://www.roblox.com/asset/?id=4483362748"
	}
}

-- Utility Functions
local function Kwargify(defaults, passed)
    for i, v in pairs(defaults) do
        if passed[i] == nil then
            passed[i] = v
        end
    end
    return passed
end

local function GetIcon(icon, source)
    if source == "Custom" then
        return "rbxassetid://" .. icon
    elseif IconModule[source] then
        local sourceicon = IconModule[source]
        return sourceicon[icon] or "rbxassetid://6031079158"
    else
        return "rbxassetid://6031079158"
    end
end

function tween(object, goal, callback, tweenin)
    local tween = TweenService:Create(object, tweenin or tweeninfo, goal)
    tween.Completed:Connect(callback or function() end)
    tween:Play()
end

-- Dragging functionality
local function Draggable(Frame)
    local dragToggle = nil
    local dragSpeed = 0.25
    local dragStart = nil
    local startPos = nil

    local function updateInput(input)
        local Delta = input.Position - dragStart
        local Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + Delta.X, startPos.Y.Scale, startPos.Y.Offset + Delta.Y)
        TweenService:Create(Frame, TweenInfo.new(dragSpeed), {Position = Position}):Play()
    end

    Frame.InputBegan:Connect(function(input)
        if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
            dragToggle = true
            dragStart = input.Position
            startPos = Frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragToggle = false
                end
            end)
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            if dragToggle then
                updateInput(input)
            end
        end
    end)
end

-- Create GUI
local function CreateGUI()
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "VexHubLib"
    ScreenGui.Parent = CoreGui
    ScreenGui.ResetOnSpawn = false
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    return ScreenGui
end

-- Main Window Creation
function VexHub:CreateWindow(WindowSettings)
    WindowSettings = Kwargify({
        Name = "Vex Hub",
        Subtitle = "UI Library",
        LogoID = "6031097225",
        Size = UDim2.fromOffset(580, 460)
    }, WindowSettings or {})
    
    local Window = { 
        CurrentTab = nil, 
        State = true, 
        NavigationExpanded = true,
        IsMinimized = false,
        OriginalSize = WindowSettings.Size,
        Bind = Enum.KeyCode.K, -- Default bind to show/hide UI
        Tabs = {},
        Elements = {}
    }
    
    -- Create main GUI
    local ScreenGui = CreateGUI()
    
    -- Main Frame
    local Main = Instance.new("Frame")
    Main.Name = "Main"
    Main.Parent = ScreenGui
    Main.AnchorPoint = Vector2.new(0.5, 0.5)
    Main.BackgroundColor3 = Color3.fromRGB(32, 30, 38)
    Main.BorderSizePixel = 0
    Main.Position = UDim2.fromScale(0.5, 0.5)
    Main.Size = WindowSettings.Size
    
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 12)
    UICorner.Parent = Main
    
    local UIStroke = Instance.new("UIStroke")
    UIStroke.Color = Color3.fromRGB(64, 61, 76)
    UIStroke.Thickness = 1
    UIStroke.Parent = Main
    
    -- Title Bar
    local TitleBar = Instance.new("Frame")
    TitleBar.Name = "TitleBar"
    TitleBar.Parent = Main
    TitleBar.BackgroundColor3 = Color3.fromRGB(40, 38, 48)
    TitleBar.BorderSizePixel = 0
    TitleBar.Size = UDim2.new(1, 0, 0, 50)
    
    local TitleCorner = Instance.new("UICorner")
    TitleCorner.CornerRadius = UDim.new(0, 12)
    TitleCorner.Parent = TitleBar
    
    local TitleFix = Instance.new("Frame")
    TitleFix.Parent = TitleBar
    TitleFix.BackgroundColor3 = Color3.fromRGB(40, 38, 48)
    TitleFix.BorderSizePixel = 0
    TitleFix.Position = UDim2.new(0, 0, 0.5, 0)
    TitleFix.Size = UDim2.new(1, 0, 0.5, 0)
    
    -- Logo
    local Logo = Instance.new("ImageLabel")
    Logo.Name = "Logo"
    Logo.Parent = TitleBar
    Logo.BackgroundTransparency = 1
    Logo.Position = UDim2.new(0, 15, 0.5, 0)
    Logo.AnchorPoint = Vector2.new(0, 0.5)
    Logo.Size = UDim2.fromOffset(30, 30)
    Logo.Image = "rbxassetid://" .. WindowSettings.LogoID
    
    -- Title Text
    local Title = Instance.new("TextLabel")
    Title.Name = "Title"
    Title.Parent = TitleBar
    Title.BackgroundTransparency = 1
    Title.Position = UDim2.new(0, 55, 0, 8)
    Title.Size = UDim2.new(1, -55, 0, 20)
    Title.Font = Enum.Font.GothamBold
    Title.Text = WindowSettings.Name
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.TextSize = 16
    Title.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Subtitle
    local Subtitle = Instance.new("TextLabel")
    Subtitle.Name = "Subtitle"
    Subtitle.Parent = TitleBar
    Subtitle.BackgroundTransparency = 1
    Subtitle.Position = UDim2.new(0, 55, 0, 28)
    Subtitle.Size = UDim2.new(1, -125, 0, 14)
    Subtitle.Font = Enum.Font.Gotham
    Subtitle.Text = WindowSettings.Subtitle
    Subtitle.TextColor3 = Color3.fromRGB(200, 200, 200)
    Subtitle.TextSize = 12
    Subtitle.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Controls Container (right side)
    local Controls = Instance.new("Frame")
    Controls.Name = "Controls"
    Controls.Parent = TitleBar
    Controls.BackgroundTransparency = 1
    Controls.Position = UDim2.new(1, -70, 0.5, 0)
    Controls.AnchorPoint = Vector2.new(0, 0.5)
    Controls.Size = UDim2.fromOffset(60, 30)
    
    local ControlsLayout = Instance.new("UIListLayout")
    ControlsLayout.FillDirection = Enum.FillDirection.Horizontal
    ControlsLayout.HorizontalAlignment = Enum.HorizontalAlignment.Right
    ControlsLayout.Padding = UDim.new(0, 5)
    ControlsLayout.SortOrder = Enum.SortOrder.LayoutOrder
    ControlsLayout.Parent = Controls
    
    -- Hamburger Menu Button (3 lines) - LEFT SIDE
    local MenuButton = Instance.new("Frame")
    MenuButton.Name = "MenuButton"
    MenuButton.Parent = TitleBar
    MenuButton.BackgroundColor3 = Color3.fromRGB(50, 48, 58)
    MenuButton.BackgroundTransparency = 1
    MenuButton.BorderSizePixel = 0
    MenuButton.Position = UDim2.new(0, 180 + 15, 0.5, 0) -- Position after navigation area
    MenuButton.AnchorPoint = Vector2.new(0, 0.5)
    MenuButton.Size = UDim2.fromOffset(30, 30)
    
    local MenuCorner = Instance.new("UICorner")
    MenuCorner.CornerRadius = UDim.new(0, 6)
    MenuCorner.Parent = MenuButton
    
    -- Create the 3 lines
    for i = 1, 3 do
        local Line = Instance.new("Frame")
        Line.Name = "Line" .. i
        Line.Parent = MenuButton
        Line.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
        Line.BorderSizePixel = 0
        Line.Position = UDim2.new(0.2, 0, 0.15 + (i-1) * 0.25, 0)
        Line.Size = UDim2.new(0.6, 0, 0, 2)
        
        local LineCorner = Instance.new("UICorner")
        LineCorner.CornerRadius = UDim.new(0, 1)
        LineCorner.Parent = Line
    end
    
    local MenuInteract = Instance.new("TextButton")
    MenuInteract.Name = "Interact"
    MenuInteract.Parent = MenuButton
    MenuInteract.BackgroundTransparency = 1
    MenuInteract.Size = UDim2.new(1, 0, 1, 0)
    MenuInteract.Text = ""
    
    -- Minimize Button
    local MinimizeButton = Instance.new("Frame")
    MinimizeButton.Name = "MinimizeButton"
    MinimizeButton.Parent = Controls
    MinimizeButton.BackgroundColor3 = Color3.fromRGB(50, 48, 58)
    MinimizeButton.BackgroundTransparency = 1
    MinimizeButton.BorderSizePixel = 0
    MinimizeButton.Size = UDim2.fromOffset(30, 30)
    MinimizeButton.LayoutOrder = 1
    
    local MinimizeCorner = Instance.new("UICorner")
    MinimizeCorner.CornerRadius = UDim.new(0, 6)
    MinimizeCorner.Parent = MinimizeButton
    
    local MinimizeIcon = Instance.new("ImageLabel")
    MinimizeIcon.Name = "Icon"
    MinimizeIcon.Parent = MinimizeButton
    MinimizeIcon.BackgroundTransparency = 1
    MinimizeIcon.Position = UDim2.new(0.5, 0, 0.5, 0)
    MinimizeIcon.AnchorPoint = Vector2.new(0.5, 0.5)
    MinimizeIcon.Size = UDim2.fromOffset(16, 16)
    MinimizeIcon.Image = "rbxassetid://11036884234" -- Minimize icon
    MinimizeIcon.ImageColor3 = Color3.fromRGB(200, 200, 200)
    
    local MinimizeInteract = Instance.new("TextButton")
    MinimizeInteract.Name = "Interact"
    MinimizeInteract.Parent = MinimizeButton
    MinimizeInteract.BackgroundTransparency = 1
    MinimizeInteract.Size = UDim2.new(1, 0, 1, 0)
    MinimizeInteract.Text = ""
    
    -- Close Button
    local CloseButton = Instance.new("Frame")
    CloseButton.Name = "CloseButton"
    CloseButton.Parent = Controls
    CloseButton.BackgroundColor3 = Color3.fromRGB(50, 48, 58)
    CloseButton.BackgroundTransparency = 1
    CloseButton.BorderSizePixel = 0
    CloseButton.Size = UDim2.fromOffset(30, 30)
    CloseButton.LayoutOrder = 2
    
    local CloseCorner = Instance.new("UICorner")
    CloseCorner.CornerRadius = UDim.new(0, 6)
    CloseCorner.Parent = CloseButton
    
    local CloseIcon = Instance.new("ImageLabel")
    CloseIcon.Name = "Icon"
    CloseIcon.Parent = CloseButton
    CloseIcon.BackgroundTransparency = 1
    CloseIcon.Position = UDim2.new(0.5, 0, 0.5, 0)
    CloseIcon.AnchorPoint = Vector2.new(0.5, 0.5)
    CloseIcon.Size = UDim2.fromOffset(16, 16)
    CloseIcon.Image = "rbxassetid://10137941941" -- Close X icon
    CloseIcon.ImageColor3 = Color3.fromRGB(200, 200, 200)
    
    local CloseInteract = Instance.new("TextButton")
    CloseInteract.Name = "Interact"
    CloseInteract.Parent = CloseButton
    CloseInteract.BackgroundTransparency = 1
    CloseInteract.Size = UDim2.new(1, 0, 1, 0)
    CloseInteract.Text = ""
    
    -- Navigation Frame
    local Navigation = Instance.new("Frame")
    Navigation.Name = "Navigation"
    Navigation.Parent = Main
    Navigation.BackgroundTransparency = 1
    Navigation.Position = UDim2.new(0, 0, 0, 50)
    Navigation.Size = UDim2.new(0, 180, 1, -50)
    
    local NavPadding = Instance.new("UIPadding")
    NavPadding.PaddingTop = UDim.new(0, 10)
    NavPadding.PaddingLeft = UDim.new(0, 10)
    NavPadding.PaddingRight = UDim.new(0, 10)
    NavPadding.Parent = Navigation
    
    local NavLayout = Instance.new("UIListLayout")
    NavLayout.SortOrder = Enum.SortOrder.LayoutOrder
    NavLayout.Padding = UDim.new(0, 5)
    NavLayout.Parent = Navigation
    
    -- Content Frame
    local Content = Instance.new("Frame")
    Content.Name = "Content"
    Content.Parent = Main
    Content.BackgroundTransparency = 1
    Content.Position = UDim2.new(0, 180, 0, 50)
    Content.Size = UDim2.new(1, -180, 1, -50)
    
    local ContentPadding = Instance.new("UIPadding")
    ContentPadding.PaddingTop = UDim.new(0, 15)
    ContentPadding.PaddingLeft = UDim.new(0, 15)
    ContentPadding.PaddingRight = UDim.new(0, 15)
    ContentPadding.PaddingBottom = UDim.new(0, 15)
    ContentPadding.Parent = Content
    
    -- Enable dragging
    Draggable(Main)
    
    -- Hide UI Function (like Luna's Hide function)
    function Window:Hide(showNotification)
        Window.State = false
        
        -- Tween all elements to invisible
        tween(Main, {BackgroundTransparency = 1})
        tween(TitleBar, {BackgroundTransparency = 1})
        tween(Logo, {ImageTransparency = 1})
        tween(Title, {TextTransparency = 1})
        tween(Subtitle, {TextTransparency = 1})
        tween(UIStroke, {Transparency = 1})
        
        -- Hide controls
        for _, control in pairs(Controls:GetChildren()) do
            if control:IsA("Frame") then
                tween(control, {BackgroundTransparency = 1})
                if control:FindFirstChild("Icon") then
                    tween(control.Icon, {ImageTransparency = 1})
                end
                -- Hide hamburger lines
                for i = 1, 3 do
                    local line = control:FindFirstChild("Line" .. i)
                    if line then
                        tween(line, {BackgroundTransparency = 1})
                    end
                end
            end
        end
        
        -- Hide navigation and content
        tween(Navigation, {BackgroundTransparency = 1})
        tween(Content, {BackgroundTransparency = 1})
        
        -- Hide all tab buttons
        for _, tab in pairs(Window.Tabs) do
            if tab.Button then
                tween(tab.Button, {BackgroundTransparency = 1})
                tween(tab.Button.Icon, {ImageTransparency = 1})
                tween(tab.Button.Label, {TextTransparency = 1})
                tween(tab.Button.UIStroke, {Transparency = 1})
            end
        end
        
        wait(0.3)
        Main.Size = UDim2.fromOffset(0, 0)
        Main.Visible = false
        
        if showNotification then
            print("VexHub | Interface Hidden - Press K to reopen")
        end
    end
    
    -- Show UI Function
    function Window:Show()
        Window.State = true
        Main.Visible = true
        Main.Size = Window.IsMinimized and UDim2.fromOffset(Window.OriginalSize.X.Offset, 50) or Window.OriginalSize
        
        -- Tween all elements back to visible
        tween(Main, {BackgroundTransparency = 0})
        tween(TitleBar, {BackgroundTransparency = 0})
        tween(Logo, {ImageTransparency = 0})
        tween(Title, {TextTransparency = 0})
        tween(Subtitle, {TextTransparency = 0})
        tween(UIStroke, {Transparency = 0})
        
        -- Show controls
        for _, control in pairs(Controls:GetChildren()) do
            if control:IsA("Frame") then
                if Window.NavigationExpanded or control.Name == "CloseButton" or control.Name == "MinimizeButton" then
                    tween(control, {BackgroundTransparency = control.Name == "MenuButton" and 1 or 1})
                end
                if control:FindFirstChild("Icon") then
                    tween(control.Icon, {ImageTransparency = 0})
                end
                -- Show hamburger lines
                for i = 1, 3 do
                    local line = control:FindFirstChild("Line" .. i)
                    if line then
                        tween(line, {BackgroundTransparency = 0})
                    end
                end
            end
        end
        
        if not Window.IsMinimized then
            -- Show navigation and content
            tween(Navigation, {BackgroundTransparency = 0})
            tween(Content, {BackgroundTransparency = 0})
            
            -- Show all tab buttons
            for _, tab in pairs(Window.Tabs) do
                if tab.Button then
                    tween(tab.Button, {BackgroundTransparency = Window.CurrentTab == tab.Settings.Name and 0 or 1})
                    tween(tab.Button.Icon, {ImageTransparency = 0})
                    tween(tab.Button.Label, {TextTransparency = 0})
                    tween(tab.Button.UIStroke, {Transparency = Window.CurrentTab == tab.Settings.Name and 0.4 or 1})
                end
            end
        end
    end
    
    -- Minimize UI Function
    function Window:Minimize()
        Window.IsMinimized = true
        MinimizeIcon.Image = "rbxassetid://10137941941" -- Change to maximize icon
        
        -- Hide navigation and content
        Navigation.Visible = false
        Content.Visible = false
        
        -- Resize to title bar only
        tween(Main, {Size = UDim2.fromOffset(Window.OriginalSize.X.Offset, 50)})
    end
    
    -- Maximize UI Function  
    function Window:Maximize()
        Window.IsMinimized = false
        MinimizeIcon.Image = "rbxassetid://11036884234" -- Change back to minimize icon
        
        -- Show navigation and content
        Navigation.Visible = true
        Content.Visible = true
        
        -- Resize back to original
        tween(Main, {Size = Window.OriginalSize})
    end
    
    -- Toggle Navigation Function
    function Window:ToggleNavigation()
        Window.NavigationExpanded = not Window.NavigationExpanded
        
        if Window.NavigationExpanded then
            -- Expand navigation (show icons + text)
            tween(Navigation, {Size = UDim2.new(0, 180, 1, -50)})
            tween(Content, {
                Position = UDim2.new(0, 180, 0, 50),
                Size = UDim2.new(1, -180, 1, -50)
            })
            tween(MenuButton, {Position = UDim2.new(0, 180 + 15, 0.5, 0)})
            
            -- Show tab text labels
            for _, tab in pairs(Window.Tabs) do
                if tab.Button and tab.Button:FindFirstChild("Label") then
                    tab.Button.Label.Visible = true
                    tween(tab.Button.Label, {TextTransparency = 0})
                end
            end
            
            -- Animate hamburger lines back to normal
            for i = 1, 3 do
                local line = MenuButton:FindFirstChild("Line" .. i)
                if line then
                    tween(line, {
                        Position = UDim2.new(0.2, 0, 0.15 + (i-1) * 0.25, 0),
                        Rotation = 0,
                        BackgroundColor3 = Color3.fromRGB(200, 200, 200)
                    })
                end
            end
        else
            -- Collapse navigation (show icons only)
            tween(Navigation, {Size = UDim2.new(0, 55, 1, -50)})
            tween(Content, {
                Position = UDim2.new(0, 55, 0, 50),
                Size = UDim2.new(1, -55, 1, -50)
            })
            tween(MenuButton, {Position = UDim2.new(0, 55 + 15, 0.5, 0)})
            
            -- Hide tab text labels
            for _, tab in pairs(Window.Tabs) do
                if tab.Button and tab.Button:FindFirstChild("Label") then
                    tween(tab.Button.Label, {TextTransparency = 1}, function()
                        tab.Button.Label.Visible = false
                    end)
                end
            end
            
            -- Keep hamburger lines normal (don't turn to X)
            for i = 1, 3 do
                local line = MenuButton:FindFirstChild("Line" .. i)
                if line then
                    tween(line, {
                        Position = UDim2.new(0.2, 0, 0.15 + (i-1) * 0.25, 0),
                        Rotation = 0,
                        BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                    })
                end
            end
        end
    end
    
    -- Menu button click handler
    MenuInteract.MouseButton1Click:Connect(function()
        Window:ToggleNavigation()
    end)
    
    -- Menu button hover effects
    MenuButton.MouseEnter:Connect(function()
        tween(MenuButton, {BackgroundTransparency = 0.8})
        -- Brighten lines on hover
        for i = 1, 3 do
            local line = MenuButton:FindFirstChild("Line" .. i)
            if line then
                tween(line, {BackgroundColor3 = Color3.fromRGB(255, 255, 255)})
            end
        end
    end)
    
    MenuButton.MouseLeave:Connect(function()
        tween(MenuButton, {BackgroundTransparency = 1})
        -- Return lines to normal color
        for i = 1, 3 do
            local line = MenuButton:FindFirstChild("Line" .. i)
            if line then
                local normalColor = Window.NavigationExpanded and Color3.fromRGB(200, 200, 200) or Color3.fromRGB(255, 255, 255)
                tween(line, {BackgroundColor3 = normalColor})
            end
        end
    end)
    
    -- Minimize button events
    MinimizeInteract.MouseButton1Click:Connect(function()
        if Window.IsMinimized then
            Window:Maximize()
        else
            Window:Minimize()
        end
    end)
    
    MinimizeButton.MouseEnter:Connect(function()
        tween(MinimizeButton, {BackgroundTransparency = 0.8})
        tween(MinimizeIcon, {ImageColor3 = Color3.fromRGB(255, 255, 255)})
    end)
    
    MinimizeButton.MouseLeave:Connect(function()
        tween(MinimizeButton, {BackgroundTransparency = 1})
        tween(MinimizeIcon, {ImageColor3 = Color3.fromRGB(200, 200, 200)})
    end)
    
    -- Close button events
    CloseInteract.MouseButton1Click:Connect(function()
        Window:Hide(true)
    end)
    
    CloseButton.MouseEnter:Connect(function()
        tween(CloseButton, {BackgroundTransparency = 0.8, BackgroundColor3 = Color3.fromRGB(232, 17, 35)})
        tween(CloseIcon, {ImageColor3 = Color3.fromRGB(255, 255, 255)})
    end)
    
    CloseButton.MouseLeave:Connect(function()
        tween(CloseButton, {BackgroundTransparency = 1, BackgroundColor3 = Color3.fromRGB(50, 48, 58)})
        tween(CloseIcon, {ImageColor3 = Color3.fromRGB(200, 200, 200)})
    end)
    
    -- Keyboard bind to show/hide UI
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        if input.KeyCode == Window.Bind then
            if Window.State then
                Window:Hide(true)
            else
                Window:Show()
            end
        end
    end)
    
    Window.GUI = ScreenGui
    Window.Main = Main
    Window.Navigation = Navigation
    Window.Content = Content
    Window.MenuButton = MenuButton
    Window.Controls = Controls
    
    -- Function to change bind key
    function Window:SetBind(newBind)
        Window.Bind = newBind
    end
    
    -- Create Tab Function
    function Window:CreateTab(TabSettings)
        TabSettings = Kwargify({
            Name = "Tab",
            Icon = "view_in_ar",
            ImageSource = "Material"
        }, TabSettings or {})
        
        local Tab = {}
        Tab.Elements = {}
        
        -- Tab Button
        local TabButton = Instance.new("Frame")
        TabButton.Name = TabSettings.Name
        TabButton.Parent = Navigation
        TabButton.BackgroundColor3 = Color3.fromRGB(32, 30, 38)
        TabButton.BorderSizePixel = 0
        TabButton.Size = UDim2.new(1, 0, 0, 40)
        
        local TabCorner = Instance.new("UICorner")
        TabCorner.CornerRadius = UDim.new(0, 8)
        TabCorner.Parent = TabButton
        
        local TabStroke = Instance.new("UIStroke")
        TabStroke.Color = Color3.fromRGB(64, 61, 76)
        TabStroke.Thickness = 1
        TabStroke.Transparency = 1
        TabStroke.Parent = TabButton
        
        local TabIcon = Instance.new("ImageLabel")
        TabIcon.Name = "Icon"
        TabIcon.Parent = TabButton
        TabIcon.BackgroundTransparency = 1
        TabIcon.Position = UDim2.new(0, Window.NavigationExpanded and 10 or 17.5, 0.5, 0)
        TabIcon.AnchorPoint = Vector2.new(0, 0.5)
        TabIcon.Size = UDim2.fromOffset(20, 20)
        TabIcon.Image = GetIcon(TabSettings.Icon, TabSettings.ImageSource)
        TabIcon.ImageColor3 = Color3.fromRGB(221, 221, 221)
        
        local TabLabel = Instance.new("TextLabel")
        TabLabel.Name = "Label"
        TabLabel.Parent = TabButton
        TabLabel.BackgroundTransparency = 1
        TabLabel.Position = UDim2.new(0, 40, 0, 0)
        TabLabel.Size = UDim2.new(1, -40, 1, 0)
        TabLabel.Font = Enum.Font.Gotham
        TabLabel.Text = TabSettings.Name
        TabLabel.TextColor3 = Color3.fromRGB(221, 221, 221)
        TabLabel.TextSize = 14
        TabLabel.TextXAlignment = Enum.TextXAlignment.Left
        TabLabel.Visible = Window.NavigationExpanded
        
        local TabInteract = Instance.new("TextButton")
        TabInteract.Name = "Interact"
        TabInteract.Parent = TabButton
        TabInteract.BackgroundTransparency = 1
        TabInteract.Size = UDim2.new(1, 0, 1, 0)
        TabInteract.Text = ""
        
        -- Tab Content
        local TabPage = Instance.new("ScrollingFrame")
        TabPage.Name = TabSettings.Name
        TabPage.Parent = Content
        TabPage.BackgroundTransparency = 1
        TabPage.BorderSizePixel = 0
        TabPage.Size = UDim2.new(1, 0, 1, 0)
        TabPage.CanvasSize = UDim2.new(0, 0, 0, 0)
        TabPage.ScrollBarThickness = 0
        TabPage.Visible = false
        
        local PageLayout = Instance.new("UIListLayout")
        PageLayout.SortOrder = Enum.SortOrder.LayoutOrder
        PageLayout.Padding = UDim.new(0, 8)
        PageLayout.Parent = TabPage
        
        PageLayout.Changed:Connect(function()
            TabPage.CanvasSize = UDim2.new(0, 0, 0, PageLayout.AbsoluteContentSize.Y)
        end)
        
        Tab.Button = TabButton
        Tab.Page = TabPage
        Tab.Settings = TabSettings
        
        -- Activate function
        function Tab:Activate()
            -- Hide all other tabs
            for _, otherTab in pairs(Window.Tabs) do
                otherTab.Page.Visible = false
                tween(otherTab.Button.Icon, {ImageColor3 = Color3.fromRGB(221, 221, 221)})
                tween(otherTab.Button, {BackgroundTransparency = 1})
                tween(otherTab.Button.UIStroke, {Transparency = 1})
                
                -- Update icon position for other tabs
                local iconPos = Window.NavigationExpanded and 10 or 17.5
                tween(otherTab.Button.Icon, {Position = UDim2.new(0, iconPos, 0.5, 0)})
            end
            
            -- Show this tab
            TabPage.Visible = true
            tween(TabIcon, {ImageColor3 = Color3.fromRGB(255, 255, 255)})
            tween(TabButton, {BackgroundTransparency = 0})
            tween(TabStroke, {Transparency = 0.4})
            
            -- Update icon position for active tab
            local iconPos = Window.NavigationExpanded and 10 or 17.5
            tween(TabIcon, {Position = UDim2.new(0, iconPos, 0.5, 0)})
            
            Window.CurrentTab = TabSettings.Name
        end
        
        -- Click handler
        TabInteract.MouseButton1Click:Connect(function()
            Tab:Activate()
        end)
        
        -- Hover effects
        TabButton.MouseEnter:Connect(function()
            if Window.CurrentTab ~= TabSettings.Name then
                tween(TabStroke, {Color = Color3.fromRGB(87, 84, 104)})
            end
        end)
        
        TabButton.MouseLeave:Connect(function()
            if Window.CurrentTab ~= TabSettings.Name then
                tween(TabStroke, {Color = Color3.fromRGB(64, 61, 76)})
            end
        end)
        
        -- Auto-activate first tab
        if #Window.Tabs == 0 then
            Tab:Activate()
        end
        
        Window.Tabs[#Window.Tabs + 1] = Tab
        
        -- Create Button Function
        function Tab:CreateButton(ButtonSettings)
            ButtonSettings = Kwargify({
                Name = "Button",
                Description = nil,
                Callback = function() end,
            }, ButtonSettings or {})
            
            local ButtonV = {
                Hover = false,
                Settings = ButtonSettings
            }
            
            local Button = Instance.new("Frame")
            Button.Name = ButtonSettings.Name
            Button.Parent = TabPage
            Button.BackgroundColor3 = Color3.fromRGB(32, 30, 38)
            Button.BackgroundTransparency = 0.5
            Button.BorderSizePixel = 0
            Button.Size = UDim2.new(1, 0, 0, ButtonSettings.Description and 60 or 45)
            
            local ButtonCorner = Instance.new("UICorner")
            ButtonCorner.CornerRadius = UDim.new(0, 8)
            ButtonCorner.Parent = Button
            
            local ButtonStroke = Instance.new("UIStroke")
            ButtonStroke.Color = Color3.fromRGB(64, 61, 76)
            ButtonStroke.Thickness = 1
            ButtonStroke.Transparency = 0.5
            ButtonStroke.Parent = Button
            
            local ButtonTitle = Instance.new("TextLabel")
            ButtonTitle.Name = "Title"
            ButtonTitle.Parent = Button
            ButtonTitle.BackgroundTransparency = 1
            ButtonTitle.Position = UDim2.new(0, 15, 0, ButtonSettings.Description and 8 or 0)
            ButtonTitle.Size = UDim2.new(1, -30, 0, ButtonSettings.Description and 20 or 45)
            ButtonTitle.Font = Enum.Font.GothamSemibold
            ButtonTitle.Text = ButtonSettings.Name
            ButtonTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            ButtonTitle.TextSize = 14
            ButtonTitle.TextXAlignment = Enum.TextXAlignment.Left
            ButtonTitle.TextYAlignment = ButtonSettings.Description and Enum.TextYAlignment.Top or Enum.TextYAlignment.Center
            
            if ButtonSettings.Description then
                local ButtonDesc = Instance.new("TextLabel")
                ButtonDesc.Name = "Description"
                ButtonDesc.Parent = Button
                ButtonDesc.BackgroundTransparency = 1
                ButtonDesc.Position = UDim2.new(0, 15, 0, 28)
                ButtonDesc.Size = UDim2.new(1, -30, 0, 24)
                ButtonDesc.Font = Enum.Font.Gotham
                ButtonDesc.Text = ButtonSettings.Description
                ButtonDesc.TextColor3 = Color3.fromRGB(200, 200, 200)
                ButtonDesc.TextSize = 12
                ButtonDesc.TextXAlignment = Enum.TextXAlignment.Left
                ButtonDesc.TextYAlignment = Enum.TextYAlignment.Top
                ButtonDesc.TextWrapped = true
            end
            
            local ButtonInteract = Instance.new("TextButton")
            ButtonInteract.Name = "Interact"
            ButtonInteract.Parent = Button
            ButtonInteract.BackgroundTransparency = 1
            ButtonInteract.Size = UDim2.new(1, 0, 1, 0)
            ButtonInteract.Text = ""
            
            -- Click handler
            ButtonInteract.MouseButton1Click:Connect(function()
                local Success, Response = pcall(ButtonSettings.Callback)
                if not Success then
                    print("VexHub | " .. ButtonSettings.Name .. " Callback Error: " .. tostring(Response))
                    tween(Button, {BackgroundColor3 = Color3.fromRGB(85, 0, 0)})
                    ButtonTitle.Text = "Callback Error"
                    wait(0.5)
                    ButtonTitle.Text = ButtonSettings.Name
                    tween(Button, {BackgroundColor3 = Color3.fromRGB(32, 30, 38)})
                else
                    tween(ButtonStroke, {Color = Color3.fromRGB(136, 131, 163)})
                    wait(0.2)
                    if ButtonV.Hover then
                        tween(ButtonStroke, {Color = Color3.fromRGB(87, 84, 104)})
                    else
                        tween(ButtonStroke, {Color = Color3.fromRGB(64, 61, 76)})
                    end
                end
            end)
            
            -- Hover effects
            Button.MouseEnter:Connect(function()
                ButtonV.Hover = true
                tween(ButtonStroke, {Color = Color3.fromRGB(87, 84, 104)})
            end)
            
            Button.MouseLeave:Connect(function()
                ButtonV.Hover = false
                tween(ButtonStroke, {Color = Color3.fromRGB(64, 61, 76)})
            end)
            
            function ButtonV:Set(NewButtonSettings)
                NewButtonSettings = Kwargify({
                    Name = ButtonSettings.Name,
                    Description = ButtonSettings.Description,
                    Callback = ButtonSettings.Callback
                }, NewButtonSettings or {})
                
                ButtonSettings = NewButtonSettings
                ButtonV.Settings = NewButtonSettings
                
                ButtonTitle.Text = ButtonSettings.Name
                if ButtonSettings.Description and Button.Description then
                    Button.Description.Text = ButtonSettings.Description
                end
            end
            
            function ButtonV:Destroy()
                Button:Destroy()
            end
            
            Tab.Elements[#Tab.Elements + 1] = ButtonV
            return ButtonV
        end
        
        -- Create Toggle Function
        function Tab:CreateToggle(ToggleSettings, Flag)
            ToggleSettings = Kwargify({
                Name = "Toggle",
                Description = nil,
                CurrentValue = false,
                Callback = function(Value) end,
            }, ToggleSettings or {})
            
            local ToggleV = { 
                IgnoreConfig = false, 
                Class = "Toggle",
                CurrentValue = ToggleSettings.CurrentValue,
                Settings = ToggleSettings
            }
            
            local Toggle = Instance.new("Frame")
            Toggle.Name = ToggleSettings.Name
            Toggle.Parent = TabPage
            Toggle.BackgroundColor3 = Color3.fromRGB(32, 30, 38)
            Toggle.BackgroundTransparency = 0.5
            Toggle.BorderSizePixel = 0
            Toggle.Size = UDim2.new(1, 0, 0, ToggleSettings.Description and 60 or 45)
            
            local ToggleCorner = Instance.new("UICorner")
            ToggleCorner.CornerRadius = UDim.new(0, 8)
            ToggleCorner.Parent = Toggle
            
            local ToggleStroke = Instance.new("UIStroke")
            ToggleStroke.Color = Color3.fromRGB(64, 61, 76)
            ToggleStroke.Thickness = 1
            ToggleStroke.Transparency = 0.5
            ToggleStroke.Parent = Toggle
            
            local ToggleTitle = Instance.new("TextLabel")
            ToggleTitle.Name = "Title"
            ToggleTitle.Parent = Toggle
            ToggleTitle.BackgroundTransparency = 1
            ToggleTitle.Position = UDim2.new(0, 15, 0, ToggleSettings.Description and 8 or 0)
            ToggleTitle.Size = UDim2.new(1, -65, 0, ToggleSettings.Description and 20 or 45)
            ToggleTitle.Font = Enum.Font.GothamSemibold
            ToggleTitle.Text = ToggleSettings.Name
            ToggleTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            ToggleTitle.TextSize = 14
            ToggleTitle.TextXAlignment = Enum.TextXAlignment.Left
            ToggleTitle.TextYAlignment = ToggleSettings.Description and Enum.TextYAlignment.Top or Enum.TextYAlignment.Center
            
            if ToggleSettings.Description then
                local ToggleDesc = Instance.new("TextLabel")
                ToggleDesc.Name = "Description"
                ToggleDesc.Parent = Toggle
                ToggleDesc.BackgroundTransparency = 1
                ToggleDesc.Position = UDim2.new(0, 15, 0, 28)
                ToggleDesc.Size = UDim2.new(1, -65, 0, 24)
                ToggleDesc.Font = Enum.Font.Gotham
                ToggleDesc.Text = ToggleSettings.Description
                ToggleDesc.TextColor3 = Color3.fromRGB(200, 200, 200)
                ToggleDesc.TextSize = 12
                ToggleDesc.TextXAlignment = Enum.TextXAlignment.Left
                ToggleDesc.TextYAlignment = Enum.TextYAlignment.Top
                ToggleDesc.TextWrapped = true
            end
            
            -- Toggle Switch
            local ToggleSwitch = Instance.new("Frame")
            ToggleSwitch.Name = "Switch"
            ToggleSwitch.Parent = Toggle
            ToggleSwitch.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
            ToggleSwitch.BackgroundTransparency = 1
            ToggleSwitch.BorderSizePixel = 0
            ToggleSwitch.Position = UDim2.new(1, -45, 0.5, 0)
            ToggleSwitch.AnchorPoint = Vector2.new(0, 0.5)
            ToggleSwitch.Size = UDim2.fromOffset(35, 18)
            
            local SwitchCorner = Instance.new("UICorner")
            SwitchCorner.CornerRadius = UDim.new(0, 9)
            SwitchCorner.Parent = ToggleSwitch
            
            local SwitchStroke = Instance.new("UIStroke")
            SwitchStroke.Color = Color3.fromRGB(97, 97, 97)
            SwitchStroke.Thickness = 1
            SwitchStroke.Parent = ToggleSwitch
            
            local SwitchKnob = Instance.new("Frame")
            SwitchKnob.Name = "Knob"
            SwitchKnob.Parent = ToggleSwitch
            SwitchKnob.BackgroundColor3 = Color3.fromRGB(97, 97, 97)
            SwitchKnob.BorderSizePixel = 0
            SwitchKnob.Position = UDim2.new(0, 2, 0.5, 0)
            SwitchKnob.AnchorPoint = Vector2.new(0, 0.5)
            SwitchKnob.Size = UDim2.fromOffset(14, 14)
            
            local KnobCorner = Instance.new("UICorner")
            KnobCorner.CornerRadius = UDim.new(0, 7)
            KnobCorner.Parent = SwitchKnob
            
            local ToggleInteract = Instance.new("TextButton")
            ToggleInteract.Name = "Interact"
            ToggleInteract.Parent = Toggle
            ToggleInteract.BackgroundTransparency = 1
            ToggleInteract.Size = UDim2.new(1, 0, 1, 0)
            ToggleInteract.Text = ""
            
            -- Update toggle state
            local function SetToggle(value)
                ToggleV.CurrentValue = value
                
                if value then
                    tween(ToggleSwitch, {BackgroundTransparency = 0})
                    tween(SwitchStroke, {Color = Color3.fromRGB(255, 255, 255)})
                    tween(SwitchKnob, {
                        BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                        Position = UDim2.new(1, -16, 0.5, 0),
                        BackgroundTransparency = 0.45
                    })
                    
                    -- Apply theme gradient
                    local gradient = Instance.new("UIGradient")
                    gradient.Color = VexHub.ThemeGradient
                    gradient.Parent = ToggleSwitch
                else
                    tween(ToggleSwitch, {BackgroundTransparency = 1})
                    tween(SwitchStroke, {Color = Color3.fromRGB(97, 97, 97)})
                    tween(SwitchKnob, {
                        BackgroundColor3 = Color3.fromRGB(97, 97, 97),
                        Position = UDim2.new(0, 2, 0.5, 0),
                        BackgroundTransparency = 0
                    })
                    
                    -- Remove gradient
                    if ToggleSwitch:FindFirstChild("UIGradient") then
                        ToggleSwitch.UIGradient:Destroy()
                    end
                end
            end
            
            -- Click handler
            ToggleInteract.MouseButton1Click:Connect(function()
                ToggleSettings.CurrentValue = not ToggleSettings.CurrentValue
                SetToggle(ToggleSettings.CurrentValue)
                
                local Success, Response = pcall(function()
                    ToggleSettings.Callback(ToggleSettings.CurrentValue)
                end)
                
                if not Success then
                    print("VexHub | " .. ToggleSettings.Name .. " Callback Error: " .. tostring(Response))
                    tween(Toggle, {BackgroundColor3 = Color3.fromRGB(85, 0, 0)})
                    ToggleTitle.Text = "Callback Error"
                    wait(0.5)
                    ToggleTitle.Text = ToggleSettings.Name
                    tween(Toggle, {BackgroundColor3 = Color3.fromRGB(32, 30, 38)})
                end
            end)
            
            -- Hover effects
            Toggle.MouseEnter:Connect(function()
                tween(ToggleStroke, {Color = Color3.fromRGB(87, 84, 104)})
            end)
            
            Toggle.MouseLeave:Connect(function()
                tween(ToggleStroke, {Color = Color3.fromRGB(64, 61, 76)})
            end)
            
            -- Set initial state
            if ToggleSettings.CurrentValue then
                SetToggle(ToggleSettings.CurrentValue)
                pcall(function()
                    ToggleSettings.Callback(ToggleSettings.CurrentValue)
                end)
            end
            
            function ToggleV:UpdateState(State)
                ToggleSettings.CurrentValue = State
                SetToggle(State)
            end
            
            function ToggleV:Set(NewToggleSettings)
                NewToggleSettings = Kwargify({
                    Name = ToggleSettings.Name,
                    Description = ToggleSettings.Description,
                    CurrentValue = ToggleSettings.CurrentValue,
                    Callback = ToggleSettings.Callback
                }, NewToggleSettings or {})
                
                ToggleV.Settings = NewToggleSettings
                ToggleSettings = NewToggleSettings
                
                ToggleTitle.Text = ToggleSettings.Name
                if ToggleSettings.Description and Toggle.Description then
                    Toggle.Description.Text = ToggleSettings.Description
                end
                
                SetToggle(ToggleSettings.CurrentValue)
                ToggleV.CurrentValue = ToggleSettings.CurrentValue
                
                pcall(function()
                    ToggleSettings.Callback(ToggleSettings.CurrentValue)
                end)
            end
            
            function ToggleV:Destroy()
                Toggle:Destroy()
            end
            
            if Flag then
                VexHub.Options[Flag] = ToggleV
            end
            
            Tab.Elements[#Tab.Elements + 1] = ToggleV
            return ToggleV
        end
        
        return Tab
    end
    
    return Window
end

return VexHub

--[[
    USAGE EXAMPLES:
    
    This section demonstrates how to use the VexHub UI Library.
    Copy and modify these examples for your own scripts.
]]

--[[
-- Basic Usage Example:

-- Load the library
local VexHub = loadstring(game:HttpGet("YOUR_SCRIPT_URL_HERE"))()

-- Create main window
local Window = VexHub:CreateWindow({
    Name = "My Script Hub",
    Subtitle = "Version 1.0",
    LogoID = "6031097225", -- Roblox asset ID for logo
    Size = UDim2.fromOffset(580, 460)
})

-- Create first tab
local MainTab = Window:CreateTab({
    Name = "Main",
    Icon = "home",
    ImageSource = "Material"
})

-- Create second tab
local SettingsTab = Window:CreateTab({
    Name = "Settings", 
    Icon = "smart_button",
    ImageSource = "Material"
})

-- Add a simple button
MainTab:CreateButton({
    Name = "Test Button",
    Description = "This button prints a message when clicked",
    Callback = function()
        print("Button was clicked!")
    end
})

-- Add a button without description
MainTab:CreateButton({
    Name = "Simple Button",
    Callback = function()
        print("Simple button clicked!")
    end
})

-- Add a toggle with description
local MyToggle = MainTab:CreateToggle({
    Name = "Auto Farm",
    Description = "Automatically farms coins for you",
    CurrentValue = false,
    Callback = function(Value)
        print("Toggle is now:", Value)
        -- Add your toggle functionality here
        if Value then
            print("Auto farm enabled!")
        else
            print("Auto farm disabled!")
        end
    end
}, "AutoFarmFlag") -- Optional flag for saving/loading

-- Add a toggle without description
SettingsTab:CreateToggle({
    Name = "Show Notifications",
    CurrentValue = true,
    Callback = function(Value)
        print("Notifications:", Value and "Enabled" or "Disabled")
    end
})

-- Example of updating toggle state programmatically
-- MyToggle:UpdateState(true) -- This would enable the toggle

-- Example of modifying elements after creation
-- MyToggle:Set({
--     Name = "Updated Toggle Name",
--     Description = "Updated description",
--     CurrentValue = false,
--     Callback = function(Value)
--         print("Updated callback:", Value)
--     end
-- })

-- Example of destroying elements
-- MyToggle:Destroy() -- This would remove the toggle
]]

--[[
-- Advanced Usage Example:

-- Create a more complex interface
local AdvancedWindow = VexHub:CreateWindow({
    Name = "Advanced Script",
    Subtitle = "Professional Edition",
    LogoID = "6031097225",
    Size = UDim2.fromOffset(650, 500)
})

-- Combat Tab
local CombatTab = AdvancedWindow:CreateTab({
    Name = "Combat",
    Icon = "extension",
    ImageSource = "Material"
})

-- Add combat features
CombatTab:CreateToggle({
    Name = "Kill Aura",
    Description = "Automatically attacks nearby enemies",
    CurrentValue = false,
    Callback = function(Value)
        _G.KillAura = Value
        if Value then
            -- Start kill aura loop
            spawn(function()
                while _G.KillAura do
                    wait(0.1)
                    -- Your kill aura code here
                    print("Attacking enemies...")
                end
            end)
        end
    end
}, "KillAuraToggle")

CombatTab:CreateButton({
    Name = "Instant Kill All",
    Description = "Instantly kills all enemies on the map",
    Callback = function()
        print("Killing all enemies...")
        -- Your instant kill code here
        for i = 1, 10 do
            wait(0.1)
            print("Killed enemy", i)
        end
        print("All enemies eliminated!")
    end
})

-- Player Tab
local PlayerTab = AdvancedWindow:CreateTab({
    Name = "Player",
    Icon = "view_in_ar", 
    ImageSource = "Material"
})

PlayerTab:CreateToggle({
    Name = "Speed Hack",
    Description = "Increases your movement speed",
    CurrentValue = false,
    Callback = function(Value)
        local Players = game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        
        if LocalPlayer and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            if Value then
                LocalPlayer.Character.Humanoid.WalkSpeed = 50
                print("Speed hack enabled!")
            else
                LocalPlayer.Character.Humanoid.WalkSpeed = 16
                print("Speed hack disabled!")
            end
        end
    end
})

PlayerTab:CreateToggle({
    Name = "Jump Power",
    Description = "Increases your jump height",
    CurrentValue = false,
    Callback = function(Value)
        local Players = game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        
        if LocalPlayer and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            if Value then
                LocalPlayer.Character.Humanoid.JumpPower = 100
                print("Jump boost enabled!")
            else
                LocalPlayer.Character.Humanoid.JumpPower = 50
                print("Jump boost disabled!")
            end
        end
    end
})

PlayerTab:CreateButton({
    Name = "Teleport to Spawn",
    Callback = function()
        local Players = game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        
        if LocalPlayer and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(0, 10, 0)
            print("Teleported to spawn!")
        end
    end
})

-- Misc Tab
local MiscTab = AdvancedWindow:CreateTab({
    Name = "Miscellaneous",
    Icon = "tab",
    ImageSource = "Material"
})

MiscTab:CreateToggle({
    Name = "Anti-AFK",
    Description = "Prevents you from being kicked for inactivity",
    CurrentValue = false,
    Callback = function(Value)
        _G.AntiAFK = Value
        if Value then
            spawn(function()
                local VirtualUser = game:GetService("VirtualUser")
                while _G.AntiAFK do
                    wait(300) -- Wait 5 minutes
                    VirtualUser:CaptureController()
                    VirtualUser:ClickButton2(Vector2.new())
                    print("Anti-AFK activated")
                end
            end)
        end
    end
})

MiscTab:CreateButton({
    Name = "Rejoin Server",
    Description = "Leaves and rejoins the current server",
    Callback = function()
        local TeleportService = game:GetService("TeleportService")
        local Players = game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        
        TeleportService:Teleport(game.PlaceId, LocalPlayer)
    end
})

MiscTab:CreateButton({
    Name = "Copy Game Link",
    Description = "Copies the current game link to clipboard",
    Callback = function()
        local gameLink = "https://www.roblox.com/games/" .. game.PlaceId
        setclipboard(gameLink)
        print("Game link copied to clipboard!")
    end
})
]]

--[[
-- Customization Examples:

-- Custom theme colors (modify the ThemeGradient at the top of the script)
VexHub.ThemeGradient = ColorSequence.new{
    ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 100, 100)), -- Red
    ColorSequenceKeypoint.new(0.50, Color3.fromRGB(100, 255, 100)), -- Green  
    ColorSequenceKeypoint.new(1.00, Color3.fromRGB(100, 100, 255))  -- Blue
}

-- Using custom icons
local CustomTab = Window:CreateTab({
    Name = "Custom",
    Icon = "123456789", -- Your custom Roblox asset ID
    ImageSource = "Custom"
})

-- Error handling example
local SafeButton = MainTab:CreateButton({
    Name = "Safe Button",
    Description = "This button has error handling",
    Callback = function()
        -- This might cause an error
        local success, result = pcall(function()
            -- Your potentially risky code here
            error("This is a test error")
        end)
        
        if success then
            print("Operation completed successfully!")
        else
            print("Error occurred:", result)
        end
    end
})
]] 

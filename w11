-- Vex Hub UI Lib Demo - Fluid Edition
-- Load the VexHubLib module
local VexHubLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/user/repo/main/VexHubLib.lua"))()

-- Create a window with the Fluent theme
local Window = VexHubLib:CreateWindow({
    Name = "Vex Hub",
    Subtitle = "Fluid UI Experience",
    LogoID = "6022668955", -- Code icon
    LoadingEnabled = true,
    LoadingTitle = "Vex Hub",
    LoadingSubtitle = "Loading Fluid UI...",
    Theme = "Fluent" -- Using the new Fluent theme
})

-- Create a notification to welcome the user
VexHubLib:Notification({
    Title = "Welcome to Vex Hub",
    Content = "Fluid UI is now loaded with beautiful animations and modern design!",
    Duration = 5,
    Icon = "info",
    Theme = "Fluent"
})

-- Create tabs with descriptive icons
local HomeTab = Window:CreateTab("Home", "home")
local PlayerTab = Window:CreateTab("Player", "person")
local SettingsTab = Window:CreateTab("Settings", "settings")

-- Add elements to Home tab
HomeTab:AddLabel({
    Text = "Welcome to Vex Hub Fluid UI!",
    Center = true
})

HomeTab:AddLabel({
    Text = "Elegant & Modern Design",
    Center = true
})

HomeTab:AddDivider({
    Text = "Interactive Elements"
})

-- Add some buttons with different functions
HomeTab:AddButton({
    Name = "Show Notification",
    Callback = function()
        VexHubLib:Notification({
            Title = "Button Pressed",
            Content = "You clicked the notification button with ripple effect!",
            Duration = 3,
            Icon = "check",
            Theme = "Fluent"
        })
    end
})

HomeTab:AddButton({
    Name = "Print Message",
    Callback = function()
        print("Fluid UI button clicked!")
    end
})

HomeTab:AddDivider()

-- Add toggles with fluid animations
HomeTab:AddToggle({
    Name = "Toggle Feature",
    Default = false,
    Callback = function(Value)
        print("Toggle set to:", Value)
    end
})

HomeTab:AddToggle({
    Name = "Another Toggle",
    Default = true,
    Callback = function(Value)
        print("Second toggle:", Value)
    end
})

-- Add a slider with gradient fill
HomeTab:AddSlider({
    Name = "Speed Multiplier",
    Min = 0,
    Max = 10,
    Default = 5,
    Increment = 0.5,
    Callback = function(Value)
        print("Slider value:", Value)
    end
})

-- Add dropdown with animation
HomeTab:AddDropdown({
    Name = "Select Option",
    Options = {"Option 1", "Option 2", "Option 3", "Option 4"},
    Default = "Option 1",
    Callback = function(Selected)
        print("Selected:", Selected)
    end
})

-- Add textbox
HomeTab:AddTextbox({
    Name = "Enter Text",
    Default = "",
    PlaceholderText = "Type here...",
    ClearOnFocus = false,
    Callback = function(Text)
        print("Input text:", Text)
    end
})

-- Add elements to Player tab
PlayerTab:AddLabel({
    Text = "Player Settings",
    Center = true
})

PlayerTab:AddDivider()

PlayerTab:AddSlider({
    Name = "Walk Speed",
    Min = 16,
    Max = 100,
    Default = 16,
    Increment = 1,
    Callback = function(Value)
        -- Would set walk speed in a real script
        print("Walk Speed set to:", Value)
    end
})

PlayerTab:AddSlider({
    Name = "Jump Power",
    Min = 50,
    Max = 250,
    Default = 50,
    Increment = 5,
    Callback = function(Value)
        -- Would set jump power in a real script
        print("Jump Power set to:", Value)
    end
})

PlayerTab:AddToggle({
    Name = "Infinite Jump",
    Default = false,
    Callback = function(Value)
        print("Infinite Jump:", Value)
    end
})

PlayerTab:AddToggle({
    Name = "No Clip",
    Default = false,
    Callback = function(Value)
        print("No Clip:", Value)
    end
})

-- Add elements to Settings tab
SettingsTab:AddLabel({
    Text = "UI Settings",
    Center = true
})

SettingsTab:AddDivider()

-- Theme selector
SettingsTab:AddDropdown({
    Name = "UI Theme",
    Options = {"Fluent", "VexDefault", "Midnight", "Sunset", "Ocean", "Forest", "Amethyst", "Crimson", "Darkness", "Sakura"},
    Default = "Fluent",
    Callback = function(Selected)
        print("Theme selected:", Selected)
        -- Would change theme in real implementation
    end
})

SettingsTab:AddButton({
    Name = "Reset All Settings",
    Callback = function()
        VexHubLib:Notification({
            Title = "Settings Reset",
            Content = "All settings have been reset to default values",
            Duration = 3,
            Icon = "check",
            Theme = "Fluent"
        })
    end
})

SettingsTab:AddDivider({
    Text = "Credits"
})

SettingsTab:AddLabel({
    Text = "Created by VexHub Team",
    Center = true
})

SettingsTab:AddLabel({
    Text = "Fluid Design Â© 2023",
    Center = true
}) 
